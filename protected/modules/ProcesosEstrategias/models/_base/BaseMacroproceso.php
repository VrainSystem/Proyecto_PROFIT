<?php

/**
 * This is the model base class for the table "macroproceso".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Macroproceso".
 *
 * Columns in table "macroproceso" available as properties of the model,
 * followed by relations of table "macroproceso" available as properties of the model.
 *
 * @property integer $id_macroproceso
 * @property string $nombre
 * @property string $descripcion
 *
 * @property Proceso[] $procesos
 * @property UnidadNegocio[] $unidadNegocios
 */
abstract class BaseMacroproceso extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'macroproceso';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Macroproceso|Macroprocesos', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre', 'required'),
			array('nombre, descripcion', 'length', 'max'=>255),
			array('descripcion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_macroproceso, nombre, descripcion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'procesos' => array(self::HAS_MANY, 'Proceso', 'id_macroproceso'),
			'unidadNegocios' => array(self::MANY_MANY, 'UnidadNegocio', 'unidad_negocio_macroproceso(id_macroproceso, id_unidad_negocio)'),
		);
	}

	public function pivotModels() {
		return array(
			'unidadNegocios' => 'UnidadNegocioMacroproceso',
		);
	}

	public function attributeLabels() {
		return array(
			'id_macroproceso' => Yii::t('app', 'Id Macroproceso'),
			'nombre' => Yii::t('app', 'Nombre'),
			'descripcion' => Yii::t('app', 'Descripcion'),
			'procesos' => null,
			'unidadNegocios' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_macroproceso', $this->id_macroproceso);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}