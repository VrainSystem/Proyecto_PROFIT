<?php

/**
 * This is the model base class for the table "dimension".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Dimension".
 *
 * Columns in table "dimension" available as properties of the model,
 * followed by relations of table "dimension" available as properties of the model.
 *
 * @property integer $id_dimension
 * @property string $nombre
 * @property integer $id_empresa
 *
 * @property Empresa $idEmpresa
 * @property ObjetivoEstrategico[] $objetivoEstrategicos
 */
abstract class BaseDimension extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'dimension';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Dimension|Dimensions', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, id_empresa', 'required'),
			array('id_empresa', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>255),
			array('id_dimension, nombre, id_empresa', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idEmpresa' => array(self::BELONGS_TO, 'Empresa', 'id_empresa'),
			'objetivoEstrategicos' => array(self::HAS_MANY, 'ObjetivoEstrategico', 'id_dimension'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_dimension' => Yii::t('app', 'Id Dimension'),
			'nombre' => Yii::t('app', 'Nombre'),
			'id_empresa' => null,
			'idEmpresa' => null,
			'objetivoEstrategicos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_dimension', $this->id_dimension);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('id_empresa', $this->id_empresa);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}