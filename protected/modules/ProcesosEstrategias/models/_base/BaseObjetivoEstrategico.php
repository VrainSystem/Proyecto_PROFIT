<?php

/**
 * This is the model base class for the table "objetivo_estrategico".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ObjetivoEstrategico".
 *
 * Columns in table "objetivo_estrategico" available as properties of the model,
 * followed by relations of table "objetivo_estrategico" available as properties of the model.
 *
 * @property string $nombre
 * @property string $codigo
 * @property integer $id_objetivo_estrategico
 * @property integer $id_dimension
 *
 * @property Dimension $idDimension
 * @property Riesgo[] $riesgos
 */
abstract class BaseObjetivoEstrategico extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'objetivo_estrategico';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ObjetivoEstrategico|ObjetivoEstrategicos', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, codigo, id_dimension', 'required'),
			array('id_dimension', 'numerical', 'integerOnly'=>true),
			array('nombre, codigo', 'length', 'max'=>255),
			array('nombre, codigo, id_objetivo_estrategico, id_dimension', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idDimension' => array(self::BELONGS_TO, 'Dimension', 'id_dimension'),
			'riesgos' => array(self::MANY_MANY, 'Riesgo', 'objetivo_estrategico_riesgo(id_objetivo_estrategico, id_riesgo)'),
		);
	}

	public function pivotModels() {
		return array(
			'riesgos' => 'ObjetivoEstrategicoRiesgo',
		);
	}

	public function attributeLabels() {
		return array(
			'nombre' => Yii::t('app', 'Nombre'),
			'codigo' => Yii::t('app', 'Codigo'),
			'id_objetivo_estrategico' => Yii::t('app', 'Id Objetivo Estrategico'),
			'id_dimension' => null,
			'idDimension' => null,
			'riesgos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('codigo', $this->codigo, true);
		$criteria->compare('id_objetivo_estrategico', $this->id_objetivo_estrategico);
		$criteria->compare('id_dimension', $this->id_dimension);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}