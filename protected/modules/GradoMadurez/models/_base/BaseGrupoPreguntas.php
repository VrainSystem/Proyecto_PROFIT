<?php

/**
 * This is the model base class for the table "grupo_preguntas".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "GrupoPreguntas".
 *
 * Columns in table "grupo_preguntas" available as properties of the model,
 * followed by relations of table "grupo_preguntas" available as properties of the model.
 *
 * @property integer $id_grupo_preguntas
 * @property string $nombre
 * @property string $descripcion
 * @property integer $id_cuestionario
 *
 * @property Cuestionario $idCuestionario
 * @property PreguntaMadre[] $preguntaMadres
 */
abstract class BaseGrupoPreguntas extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'grupo_preguntas';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'GrupoPreguntas|GrupoPreguntases', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, id_cuestionario', 'required'),
			array('id_cuestionario', 'numerical', 'integerOnly'=>true),
			array('nombre, descripcion', 'length', 'max'=>255),
			array('descripcion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_grupo_preguntas, nombre, descripcion, id_cuestionario', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idCuestionario' => array(self::BELONGS_TO, 'Cuestionario', 'id_cuestionario'),
			'preguntaMadres' => array(self::HAS_MANY, 'PreguntaMadre', 'id_grupo_preguntas'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_grupo_preguntas' => Yii::t('app', 'Id Grupo Preguntas'),
			'nombre' => Yii::t('app', 'Nombre'),
			'descripcion' => Yii::t('app', 'Descripcion'),
			'id_cuestionario' => null,
			'idCuestionario' => null,
			'preguntaMadres' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_grupo_preguntas', $this->id_grupo_preguntas);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('id_cuestionario', $this->id_cuestionario);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}