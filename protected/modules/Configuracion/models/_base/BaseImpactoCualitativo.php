<?php

/**
 * This is the model base class for the table "impacto_cualitativo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ImpactoCualitativo".
 *
 * Columns in table "impacto_cualitativo" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id_impacto_cualitativo
 * @property string $rango_inferior
 * @property string $rango_superior
 * @property string $nombre
 * @property integer $valor
 *
 */
abstract class BaseImpactoCualitativo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'impacto_cualitativo';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ImpactoCualitativo|ImpactoCualitativos', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('rango_inferior, rango_superior, nombre, valor', 'required'),
			array('valor', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>255),
			array('id_impacto_cualitativo, rango_inferior, rango_superior, nombre, valor', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_impacto_cualitativo' => Yii::t('app', 'Id Impacto Cualitativo'),
			'rango_inferior' => Yii::t('app', 'Rango Inferior'),
			'rango_superior' => Yii::t('app', 'Rango Superior'),
			'nombre' => Yii::t('app', 'Nombre'),
			'valor' => Yii::t('app', 'Valor'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_impacto_cualitativo', $this->id_impacto_cualitativo);
		$criteria->compare('rango_inferior', $this->rango_inferior, true);
		$criteria->compare('rango_superior', $this->rango_superior, true);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('valor', $this->valor);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}