<?php

/**
 * This is the model base class for the table "empresa".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Empresa".
 *
 * Columns in table "empresa" available as properties of the model,
 * followed by relations of table "empresa" available as properties of the model.
 *
 * @property integer $id_empresa
 * @property string $nombre
 * @property integer $ruc
 * @property string $descripcion
 *
 * @property Dimension[] $dimensions
 * @property UnidadNegocio[] $unidadNegocios
 */
abstract class BaseEmpresa extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'empresa';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Empresa|Empresas', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, ruc', 'required'),
			array('ruc', 'numerical', 'integerOnly'=>true),
			array('nombre, descripcion', 'length', 'max'=>255),
			array('descripcion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_empresa, nombre, ruc, descripcion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'dimensions' => array(self::HAS_MANY, 'Dimension', 'id_empresa'),
			'unidadNegocios' => array(self::HAS_MANY, 'UnidadNegocio', 'id_empresa'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_empresa' => Yii::t('app', 'Id Empresa'),
			'nombre' => Yii::t('app', 'Nombre'),
			'ruc' => Yii::t('app', 'Ruc'),
			'descripcion' => Yii::t('app', 'Descripcion'),
			'dimensions' => null,
			'unidadNegocios' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_empresa', $this->id_empresa);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('ruc', $this->ruc);
		$criteria->compare('descripcion', $this->descripcion, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}